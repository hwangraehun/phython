# print('Hello World')

# 문제1
# #Write a program that uses input to prompt a user for the
# ir name and then welcomes them. Note that input will pop 
# up a dialog box. Enter Sarah in the pop-up box when you 
# are prompted so your output will match the desired output.


# name = input("Enter your name")
# print('Hello',name)

#문제2
# 2.3 Write a program to prompt the user for hours and 
# rate per hour using input to compute gross pay. Use 
# 35 hours and a rate of 2.75 per hour to test the program 
# (the pay should be 96.25). You should use input to read 
# a string and float() to convert the string to a number. 
# Do not worry about error checking or bad user data.


# hour=input("Hour:")
# rate=input("Rate per Hour:")
# pay=float(hour)*float(rate)

# print("Pay:", pay)

# 문제3
# 3.1 Write a program to prompt the user for hours and 
# rate per hour using input to compute gross pay. Pay 
# the hourly rate for the hours up to 40 and 1.5 times
#  the hourly rate for all hours worked above 40 hours.
#   Use 45 hours and a rate of 10.50 per hour to test 
#   the program (the pay should be 498.75). You should 
#   use input to read a string and float() to convert 
#   the string to a number. Do not worry about error 
#   checking the user input - assume the user types 
#   numbers properly.

# hour = float(input(' Hours:'))
# rate = float(input(' Rate:'))

# if hour <= 40:
#  	print( hour  * rate)
# elif hour > 40:
# 	print(40* rate + (hour-40)*1.5*rate)

# 문제4
# 3.3 Write a program to prompt for a score between 
# 0.0 and 1.0. If the score is out of range, print an 
# error. If the score is between 0.0 and 1.0, print a 
# grade using the following table:
# Score Grade
# >= 0.9 A
# >= 0.8 B
# >= 0.7 C
# >= 0.6 D
# < 0.6 F
# If the user enters a value out of range,
# print a suitable error message and exit. 
# For the test, enter a score of 0.85.

# try:
#     score = float(input('Enter score: '))
#     if score < 0 or score > 1:
#         raise ValueError
# except:
#     print("Bad Score")
#     quit()

# grade = 'F'

# if score >= 0.9:
#     grade= 'A'
# elif score >= 0.8:
#     grade = 'B'
# elif score >= 0.7:
#     grade = 'C'
# elif score >= 0.6:
#     grade = 'D'

# print(grade)

# score=float(input('Enter score'))
# if score >= 0.9:
#     score='A'
# elif score >= 0.8:
#     score='B'
# elif score >= 0.7:
#     grade = 'C'
# elif 0 < score < 0.6 :
#     grade = 'D'
# else
# print('bad')

# print(score)

문제5
# Write a program to prompt the user for hours 
# and rate per hour using input to compute gross pay.
#  Pay should be the normal rate for hours up to 40 
#  and time-and-a-half for the hourly rate for all 
#  hours worked above 40 hours. Put the logic to do 
#  the computation of pay in a function called computepay()
#   and use the function to do the computation. The function
#    should return a value. Use 45 hours and a rate of 10.50
#     per hour to test the program (the pay should be 498.75).
#      You should use input to read a string and float() 
#      to convert the string to a number. Do not worry 
#      about error checking the user input unless you want to
#       - you can assume the user types numbers properly.
#        Do not name your variable sum or use the sum() function.

# def program(h,r):
#     if h > 40:
#         pay = 1.5 * r * (h - 40) + (40 *r)
#     else:
#         pay = h * r
#     return pay
    
# hours = float(input("Hours:"))
# rate = float(input("rate per hour:"))

# pay = program(hours,rate)
# print('Pay',pay)


문제6
# 5.2 Write a program that repeatedly prompts a user for integer 
# numbers until the user enters 'done'. Once 'done' is entered, 
# print out the largest and smallest of the numbers. If the user 
# enters anything other than a valid number catch it with a try/except
#  and put out an appropriate message and ignore the number. Enter 7, 2,
#   bob, 10, and 4 and match the output below.

# num = 0
# largest = -1
# smallest = None
# while True:
#     num = input('Enter a number:')
#     if num == "done" :
#         break
#     try :
#         numb = int(num)
#     except :
#         print('Invalid input')
#     if smallest is None :
#         smallest = numb
#     elif numb < smallest :
#         smallest = numb
#     elif numb > largest :
#         largest = numb
# print("Maximum is", largest)
# print("Minimum is", smallest)

# num=0

# while True:
#     num=input('number :')
#     if num=='done':
#         break
#     if num=int(num)
#     print('Invalid input')
#     if
    
